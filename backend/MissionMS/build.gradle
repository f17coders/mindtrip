plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "4.4.1.3373"

}

group = 'com.A303'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

sonar {
    properties {
        property "sonar.projectKey", "backend-mission"
        property "sonar.projectName", "backend-mission"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'


// spring cloud
    // eureka client
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    // feign client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // prometheus
//    implementation 'io.micrometer:micrometer-registry-prometheus'
    // micrometer
    implementation platform('io.micrometer:micrometer-tracing-bom:latest.release')
    implementation 'io.micrometer:micrometer-observation'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    // https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'io.github.openfeign:feign-micrometer'


// JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

// DB
    // MySQL
//    runtimeOnly 'com.mysql:mysql-connector-j'
    // MariaDB
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    // mongodb
//    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // redis
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

// Security
    // spring security
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    // jwt
//    implementation 'io.jsonwebtoken:jjwt:0.9.1'
//    implementation 'javax.xml.bind:jaxb-api:2.3.1' // jdk 8이상 필요
    // gson
//    implementation 'com.google.code.gson:gson:2.9.0'

    // websocket
//    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // springfox
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
